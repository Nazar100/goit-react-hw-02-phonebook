{"version":3,"sources":["components/Form/ContactsForm.module.css","components/Contacts/Contacts.module.css","components/Form/ContactsForm.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","ContactsForm","state","name","number","handleInput","e","targetName","currentTarget","setState","value","handleSubmit","preventDefault","props","onSubmit","this","className","s","container","type","onChange","Component","Contacts","contacts","deleteContact","length","map","id","button","data-key","onClick","empty","Filter","input","App","filter","hasContact","checkExistingContacts","forEach","contact","alert","addContact","item","shortid","generate","key","target","dataset","filterChange","normalizedFilter","toLowerCase","filteredContacts","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.091acf90.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactsForm_container__so_Rq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"Contacts_name__25ers\",\"number\":\"Contacts_number__3xFN5\",\"button\":\"Contacts_button__3OGpI\",\"empty\":\"Contacts_empty__1zP8v\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport s from './ContactsForm.module.css';\n\nclass ContactsForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleInput = e => {\n    const targetName = e.currentTarget.name;\n\n    this.setState({ [targetName]: e.currentTarget.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    if (name === '' || number === '') return;\n\n    this.props.onSubmit([name, number]);\n\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className={s.container}>\n          <label>\n            Enter the name\n            <input\n              type=\"text\"\n              value={name}\n              name=\"name\"\n              onChange={this.handleInput}\n            />\n          </label>\n          <label>\n            Enter the number\n            <input\n              type=\"number\"\n              value={number}\n              name=\"number\"\n              onChange={this.handleInput}\n            />\n          </label>\n        </div>\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactsForm;\n\nContactsForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport s from './Contacts.module.css';\n\nexport default function Contacts({ contacts, deleteContact }) {\n  return (\n    <ul>\n      {contacts.length > 0 &&\n        contacts.map(({ name, number, id }) => {\n          return (\n            <li key={id}>\n              <span className={s.name}>Name: {name}</span>\n              <span className={s.number}>Number: {number}</span>\n              <button\n                className={s.button}\n                data-key={id}\n                onClick={deleteContact}\n              >\n                Delete\n              </button>\n            </li>\n          );\n        })}\n      {contacts.length === 0 && <li className={s.empty}>List is Empty</li>}\n    </ul>\n  );\n}\n\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import PropTypes from 'prop-types';\n\nimport s from './Filter.module.css';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <label>\n      Filter\n      <input\n        className={s.input}\n        type=\"text\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import shortid from 'shortid';\n\nimport React, { Component } from 'react';\nimport './App.css';\n\nimport ContactsForm from './components/Form/ContactsForm';\nimport Contacts from './components/Contacts/Contacts';\nimport Filter from './components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  hasContact = false;\n\n  checkExistingContacts = name => {\n    this.state.contacts.forEach(contact => {\n      if (contact.name === name) {\n        alert(`${name} is already in your contacts`);\n        this.hasContact = true;\n        return;\n      }\n    });\n  };\n\n  addContact = contact => {\n    this.hasContact = false;\n\n    let name = contact[0];\n    let number = contact[1];\n\n    this.checkExistingContacts(name);\n\n    if (this.hasContact) {\n      return;\n    }\n\n    const item = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [item, ...contacts],\n    }));\n  };\n\n  deleteContact = e => {\n    const key = e.target.dataset.key;\n\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => {\n        return contact.id !== key;\n      }),\n    }));\n  };\n\n  filterChange = e => {\n    this.setState({\n      filter: e.currentTarget.value,\n    });\n  };\n\n  render() {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    const filteredContacts = this.state.contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(normalizedFilter);\n    });\n\n    return (\n      <div className=\"container\">\n        <div>\n          <h1>Phonebook</h1>\n          <ContactsForm onSubmit={this.addContact} />\n          <Filter value={this.state.filter} onChange={this.filterChange} />\n        </div>\n        <div>\n          <h2>Contacts</h2>\n          <Contacts\n            contacts={filteredContacts}\n            deleteContact={this.deleteContact}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}